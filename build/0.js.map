{"version":3,"sources":["../../src/pages/ruta/ruta.module.ts","../../src/pages/ruta/ruta.ts"],"names":[],"mappings":"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","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { RutaPage } from './ruta';\n\n@NgModule({\n  declarations: [\n    RutaPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(RutaPage),\n  ],\n})\nexport class RutaPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/ruta/ruta.module.ts","import { Component, ViewChild, ElementRef } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { Geolocation, GeolocationOptions, Geoposition } from '@ionic-native/geolocation';\nimport { ToastController } from 'ionic-angular';\nimport { PosicionProvider } from '../../providers/posicion/posicion';\n/**\n * Generated class for the RutaPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\ndeclare var google;\n@IonicPage()\n\n@Component({\n  selector: 'page-ruta',\n  templateUrl: 'ruta.html',\n})\nexport class RutaPage {\n\n\n  @ViewChild('map') mapElement: ElementRef;\n  map: any;\n  geoOptions: GeolocationOptions;\n  destino: string;\n\n  constructor(public navCtrl: NavController, \n              public navParams: NavParams,\n              private geolocation: Geolocation,\n              public toastCtrl: ToastController,\n              public posicion: PosicionProvider) {\n                \n    this.geoOptions = {\n      maximumAge: 1000,\n      timeout: 20000,\n      enableHighAccuracy: true      \n    };               \n    this.destino = this.navParams.get ('destino');\n    console.log (this.destino);\n  }\n\n  ionViewDidLoad() {\n    \n    this.posicion.getCoordenadas (this.destino).subscribe (data => {\n      console.log (data);\n      this.destino = data.results[0].formatted_address;\n      console.log (this.destino);\n    });\n\n    this.geolocation.getCurrentPosition (this.geoOptions)\n      .then (datos => {\n        this.loadMap (datos.coords.latitude, datos.coords.longitude);\n        this.startNavigating (datos);\n      })\n      .catch (error => {\n        console.log (error);\n      });    \n  }\n\n  loadMap(latitud: number, longitud: number){ \n    let latLng = new google.maps.LatLng(latitud, longitud);\n \n    let mapOptions = {\n      center: latLng,\n      zoom: 15,\n      mapTypeId: google.maps.MapTypeId.ROADMAP\n    }\n \n    this.map = new google.maps.Map(this.mapElement.nativeElement, mapOptions); \n  }\n\n  startNavigating(datos: Geoposition){\n \n        let directionsService = new google.maps.DirectionsService;\n        let directionsDisplay = new google.maps.DirectionsRenderer;\n \n        directionsDisplay.setMap(this.map);\n        //directionsDisplay.setPanel(this.directionsPanel.nativeElement);\n \n        directionsService.route({\n            //origin: {lat: datos.coords.latitude, lng: datos.coords.longitude},\n            origin: new google.maps.LatLng(datos.coords.latitude, datos.coords.longitude),\n            destination: this.destino.toString (),\n            //destination: 'Mieres',\n            travelMode: google.maps.TravelMode['WALKING']\n        }, (res, status) => {\n \n            if(status == google.maps.DirectionsStatus.OK){\n                directionsDisplay.setDirections(res);\n                let toast = this.toastCtrl.create({\n                  message: 'Distancia: ' + res.routes[0].legs[0].distance.text,\n                  duration: 3000,\n                  position: 'top'\n                });\n                toast.present();\n                console.log (res);\n            } else {\n                console.warn(status);\n            }\n \n        });\n \n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/ruta/ruta.ts"],"sourceRoot":""}